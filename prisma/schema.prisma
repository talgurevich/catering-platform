generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model BlockedDate {
  id         String   @id
  date       DateTime @unique @db.Date
  reason     String?
  created_at DateTime @default(now())
}

model Category {
  id            String    @id
  name_he       String
  slug          String    @unique
  display_order Int       @default(0)
  created_at    DateTime  @default(now())
  Product       Product[]
}

model DeliveryZone {
  id                    String   @id
  zone_type             String
  postal_code_start     String?
  postal_code_end       String?
  postal_codes          String[] @default([])
  city_names            String[] @default([])
  radius_km             Decimal? @db.Decimal(10, 2)
  delivery_fee_override Decimal? @db.Decimal(10, 2)
  is_active             Boolean  @default(true)
  created_at            DateTime @default(now())
  updated_at            DateTime
}

model DiscountCode {
  id               String   @id
  code             String   @unique
  description      String?
  discount_type    String
  discount_value   Decimal  @db.Decimal(10, 2)
  min_order_amount Decimal  @default(0) @db.Decimal(10, 2)
  valid_from       DateTime
  valid_until      DateTime
  usage_limit      Int      @default(0)
  times_used       Int      @default(0)
  is_active        Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime
  Order            Order[]

  @@index([code])
}

model Order {
  id                     String        @id
  order_number           String        @unique
  customer_name          String
  customer_phone         String
  customer_email         String
  delivery_address       Json
  delivery_date          DateTime
  delivery_time_slot     String
  special_instructions   String?
  subtotal               Decimal       @db.Decimal(10, 2)
  discount_code_id       String?
  discount_amount        Decimal       @default(0) @db.Decimal(10, 2)
  delivery_fee           Decimal       @default(0) @db.Decimal(10, 2)
  total                  Decimal       @db.Decimal(10, 2)
  payment_status         String        @default("pending")
  payment_transaction_id String?
  payplus_invoice_number String?
  order_status           String        @default("pending")
  notes                  String?
  created_at             DateTime      @default(now())
  updated_at             DateTime
  DiscountCode           DiscountCode? @relation(fields: [discount_code_id], references: [id])
  OrderItem              OrderItem[]

  @@index([customer_phone])
  @@index([delivery_date])
  @@index([order_number])
  @@index([order_status])
}

model OrderItem {
  id               String   @id
  order_id         String
  product_id       String
  product_name_he  String
  selected_options Json     @default("[]")
  quantity         Int
  price_per_unit   Decimal  @db.Decimal(10, 2)
  prep_time_days   Int
  subtotal         Decimal  @db.Decimal(10, 2)
  created_at       DateTime @default(now())
  Order            Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  Product          Product  @relation(fields: [product_id], references: [id])

  @@index([order_id])
  @@index([product_id])
}

model Product {
  id                 String          @id
  name_he            String
  description_he     String?
  short_description  String?
  price              Decimal         @db.Decimal(10, 2)
  category_id        String
  unit_label         String
  prep_time_days     Int             @default(2)
  ingredients        String?
  allergens          String[]        @default([])
  serving_size       String?
  images             String[]        @default([])
  is_active          Boolean         @default(true)
  is_featured        Boolean         @default(false)
  notes              String?
  slug               String          @unique
  max_options_select Int             @default(1)
  created_at         DateTime        @default(now())
  updated_at         DateTime
  image_url          String?
  OrderItem          OrderItem[]
  Category           Category        @relation(fields: [category_id], references: [id], onDelete: Cascade)
  ProductOption      ProductOption[]

  @@index([category_id])
  @@index([is_active])
}

model ProductOption {
  id             String   @id
  product_id     String
  option_name    String
  price_modifier Decimal  @default(0) @db.Decimal(10, 2)
  display_order  Int      @default(0)
  created_at     DateTime @default(now())
  Product        Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([product_id])
}

model Settings {
  key        String   @id
  value      Json
  updated_at DateTime
}
